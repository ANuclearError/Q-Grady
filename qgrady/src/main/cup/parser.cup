package com.aidanogrady.qgrady.syntax;

import java_cup.runtime.*;
import java.util.List;
import java.util.ArrayList;
import com.aidanogrady.qgrady.Box;

parser code  {:
  public void report_error(String message, Object info) {
    StringBuilder m = new StringBuilder("Error ");

    if (info instanceof java_cup.runtime.Symbol)
      m.append( "("+info.toString()+")" );

    m.append(" : "+message);

    System.out.println(m);
  }

  public void report_fatal_error(String message, Object info) {
    report_error(message, info);
    throw new RuntimeException("Fatal Syntax Error");
  }
:};


terminal            ARROW, COMMA, EQUALS, INPUT, OUTPUT, RANGE, SEMICOLON;
terminal Integer    NUMBER;
terminal String     VARIABLE;

non terminal                box;
non terminal Integer        inr, outr, range;
non terminal List<String>   varlist, vars;

box     ::= inr:ir outr:or vars:in ARROW vars:out   {: RESULT = new Box(ir, or, in, out);   :}
            ;
inr     ::= INPUT range:n                           {: RESULT = n;                          :}
            ;
outr    ::= OUTPUT range:n                          {: RESULT = n;                          :}
            ;
range   ::= RANGE EQUALS NUMBER:n SEMICOLON         {: RESULT = n;                          :}
            ;
vars    ::= VARIABLE:v varlist:l                    {: l.add(0, v); RESULT = l;             :}
            ;
varlist ::= varlist:l COMMA VARIABLE:v              {: l.add(v); RESULT = l;                :}
            |                                       {: RESULT = new ArrayList<String>();    :}
            ;