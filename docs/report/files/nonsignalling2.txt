public static void nonSignalling(Box box) throws SignallingException {
    int inputRange = box.getInputRange();
    int outputRange = box.getOutputRange();
    int inputSize = box.getNoOfInputs();
    int outputSize = box.getNoOfOutputs();
    int inMax = (int) Math.pow(inputRange, inputSize);
    int outMax = (int) Math.pow(outputRange, outputSize);

    for (int i = 0; i < Math.min(inputSize, outputSize); i++) {
        for(int j = 0; j < inMax; j++) {
            for(int k = 0; k < outMax; k++) {
                int[] in = Box.intToArray(j, inputSize, inputRange);
                int[] out = Box.intToArray(k, outputSize, outputRange);
                nonSignalling(box, in, out, i);
            }
        }
    }
}

private static void nonSignalling(Box box, int[] in, int[] out, int index) throws SignallingException {
    double[] sums = new double[box.getInputRange()];
    for (int i = 0; i < box.getInputRange(); i++) {
        in[index] = i;
        for (int j = 0; j < box.getOutputRange(); j++) {
            out[index] = j;
            sums[i] += box.prob(in, out);
        }
    }
    for (int k = 1; k < sums.length; k++) {
        if(sums[0] != sums[k])
            throw new SignallingException("Signalling found");
    }
}